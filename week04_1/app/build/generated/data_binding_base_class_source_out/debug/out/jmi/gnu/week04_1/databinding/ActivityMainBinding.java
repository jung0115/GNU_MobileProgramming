// Generated by view binder compiler. Do not edit!
package jmi.gnu.week04_1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import jmi.gnu.week04_1.R;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnAdd;

  @NonNull
  public final Button btnDiv;

  @NonNull
  public final Button btnMul;

  @NonNull
  public final Button btnSub;

  @NonNull
  public final EditText editNum1;

  @NonNull
  public final EditText editNum2;

  @NonNull
  public final TextView textResult;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button btnAdd,
      @NonNull Button btnDiv, @NonNull Button btnMul, @NonNull Button btnSub,
      @NonNull EditText editNum1, @NonNull EditText editNum2, @NonNull TextView textResult) {
    this.rootView = rootView;
    this.btnAdd = btnAdd;
    this.btnDiv = btnDiv;
    this.btnMul = btnMul;
    this.btnSub = btnSub;
    this.editNum1 = editNum1;
    this.editNum2 = editNum2;
    this.textResult = textResult;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add;
      Button btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.btn_div;
      Button btnDiv = ViewBindings.findChildViewById(rootView, id);
      if (btnDiv == null) {
        break missingId;
      }

      id = R.id.btn_mul;
      Button btnMul = ViewBindings.findChildViewById(rootView, id);
      if (btnMul == null) {
        break missingId;
      }

      id = R.id.btn_sub;
      Button btnSub = ViewBindings.findChildViewById(rootView, id);
      if (btnSub == null) {
        break missingId;
      }

      id = R.id.edit_num1;
      EditText editNum1 = ViewBindings.findChildViewById(rootView, id);
      if (editNum1 == null) {
        break missingId;
      }

      id = R.id.edit_num2;
      EditText editNum2 = ViewBindings.findChildViewById(rootView, id);
      if (editNum2 == null) {
        break missingId;
      }

      id = R.id.text_result;
      TextView textResult = ViewBindings.findChildViewById(rootView, id);
      if (textResult == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, btnAdd, btnDiv, btnMul, btnSub,
          editNum1, editNum2, textResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
